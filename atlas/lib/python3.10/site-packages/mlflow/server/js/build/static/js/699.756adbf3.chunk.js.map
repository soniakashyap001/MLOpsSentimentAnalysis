{"version":3,"file":"static/js/699.756adbf3.chunk.js","mappings":"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","sources":["../node_modules/antd/es/list/Item.js","../node_modules/antd/es/list/index.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ListContext } from './index';\nimport { Col } from '../grid';\nimport { ConfigContext } from '../config-provider';\nimport { cloneElement } from '../_util/reactNode';\nexport var Meta = function Meta(_a) {\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      avatar = _a.avatar,\n      title = _a.title,\n      description = _a.description,\n      others = __rest(_a, [\"prefixCls\", \"className\", \"avatar\", \"title\", \"description\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('list', customizePrefixCls);\n  var classString = classNames(\"\".concat(prefixCls, \"-item-meta\"), className);\n  var content = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item-meta-content\")\n  }, title && /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"\".concat(prefixCls, \"-item-meta-title\")\n  }, title), description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item-meta-description\")\n  }, description));\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, others, {\n    className: classString\n  }), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item-meta-avatar\")\n  }, avatar), (title || description) && content);\n};\n\nvar Item = function Item(_a) {\n  var customizePrefixCls = _a.prefixCls,\n      children = _a.children,\n      actions = _a.actions,\n      extra = _a.extra,\n      className = _a.className,\n      colStyle = _a.colStyle,\n      others = __rest(_a, [\"prefixCls\", \"children\", \"actions\", \"extra\", \"className\", \"colStyle\"]);\n\n  var _React$useContext2 = React.useContext(ListContext),\n      grid = _React$useContext2.grid,\n      itemLayout = _React$useContext2.itemLayout;\n\n  var _React$useContext3 = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext3.getPrefixCls;\n\n  var isItemContainsTextNodeAndNotSingular = function isItemContainsTextNodeAndNotSingular() {\n    var result;\n    React.Children.forEach(children, function (element) {\n      if (typeof element === 'string') {\n        result = true;\n      }\n    });\n    return result && React.Children.count(children) > 1;\n  };\n\n  var isFlexMode = function isFlexMode() {\n    if (itemLayout === 'vertical') {\n      return !!extra;\n    }\n\n    return !isItemContainsTextNodeAndNotSingular();\n  };\n\n  var prefixCls = getPrefixCls('list', customizePrefixCls);\n  var actionsContent = actions && actions.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"\".concat(prefixCls, \"-item-action\"),\n    key: \"actions\"\n  }, actions.map(function (action, i) {\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(\"li\", {\n        key: \"\".concat(prefixCls, \"-item-action-\").concat(i)\n      }, action, i !== actions.length - 1 && /*#__PURE__*/React.createElement(\"em\", {\n        className: \"\".concat(prefixCls, \"-item-action-split\")\n      }))\n    );\n  }));\n  var Element = grid ? 'div' : 'li';\n  var itemChildren = /*#__PURE__*/React.createElement(Element, _extends({}, others, {\n    // `li` element `onCopy` prop args is not same as `div`\n    className: classNames(\"\".concat(prefixCls, \"-item\"), _defineProperty({}, \"\".concat(prefixCls, \"-item-no-flex\"), !isFlexMode()), className)\n  }), itemLayout === 'vertical' && extra ? [/*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item-main\"),\n    key: \"content\"\n  }, children, actionsContent), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item-extra\"),\n    key: \"extra\"\n  }, extra)] : [children, actionsContent, cloneElement(extra, {\n    key: 'extra'\n  })]);\n  return grid ? /*#__PURE__*/React.createElement(Col, {\n    flex: 1,\n    style: colStyle\n  }, itemChildren) : itemChildren;\n};\n\nItem.Meta = Meta;\nexport default Item;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Spin from '../spin';\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\nimport { responsiveArray } from '../_util/responsiveObserve';\nimport { ConfigContext } from '../config-provider';\nimport Pagination from '../pagination';\nimport { Row } from '../grid';\nimport Item from './Item';\nexport var ListContext = /*#__PURE__*/React.createContext({});\nexport var ListConsumer = ListContext.Consumer;\n\nfunction List(_a) {\n  var _classNames;\n\n  var _a$pagination = _a.pagination,\n      pagination = _a$pagination === void 0 ? false : _a$pagination,\n      customizePrefixCls = _a.prefixCls,\n      _a$bordered = _a.bordered,\n      bordered = _a$bordered === void 0 ? false : _a$bordered,\n      _a$split = _a.split,\n      split = _a$split === void 0 ? true : _a$split,\n      className = _a.className,\n      children = _a.children,\n      itemLayout = _a.itemLayout,\n      loadMore = _a.loadMore,\n      grid = _a.grid,\n      _a$dataSource = _a.dataSource,\n      dataSource = _a$dataSource === void 0 ? [] : _a$dataSource,\n      size = _a.size,\n      header = _a.header,\n      footer = _a.footer,\n      _a$loading = _a.loading,\n      loading = _a$loading === void 0 ? false : _a$loading,\n      rowKey = _a.rowKey,\n      renderItem = _a.renderItem,\n      locale = _a.locale,\n      rest = __rest(_a, [\"pagination\", \"prefixCls\", \"bordered\", \"split\", \"className\", \"children\", \"itemLayout\", \"loadMore\", \"grid\", \"dataSource\", \"size\", \"header\", \"footer\", \"loading\", \"rowKey\", \"renderItem\", \"locale\"]);\n\n  var paginationObj = pagination && _typeof(pagination) === 'object' ? pagination : {};\n\n  var _React$useState = React.useState(paginationObj.defaultCurrent || 1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      paginationCurrent = _React$useState2[0],\n      setPaginationCurrent = _React$useState2[1];\n\n  var _React$useState3 = React.useState(paginationObj.defaultPageSize || 10),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      paginationSize = _React$useState4[0],\n      setPaginationSize = _React$useState4[1];\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      renderEmpty = _React$useContext.renderEmpty,\n      direction = _React$useContext.direction;\n\n  var defaultPaginationProps = {\n    current: 1,\n    total: 0\n  };\n  var keys = {};\n\n  var triggerPaginationEvent = function triggerPaginationEvent(eventName) {\n    return function (page, pageSize) {\n      setPaginationCurrent(page);\n      setPaginationSize(pageSize);\n\n      if (pagination && pagination[eventName]) {\n        pagination[eventName](page, pageSize);\n      }\n    };\n  };\n\n  var onPaginationChange = triggerPaginationEvent('onChange');\n  var onPaginationShowSizeChange = triggerPaginationEvent('onShowSizeChange');\n\n  var renderInnerItem = function renderInnerItem(item, index) {\n    if (!renderItem) return null;\n    var key;\n\n    if (typeof rowKey === 'function') {\n      key = rowKey(item);\n    } else if (typeof rowKey === 'string') {\n      key = item[rowKey];\n    } else {\n      key = item.key;\n    }\n\n    if (!key) {\n      key = \"list-item-\".concat(index);\n    }\n\n    keys[index] = key;\n    return renderItem(item, index);\n  };\n\n  var isSomethingAfterLastItem = function isSomethingAfterLastItem() {\n    return !!(loadMore || pagination || footer);\n  };\n\n  var renderEmptyFunc = function renderEmptyFunc(prefixCls, renderEmptyHandler) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-empty-text\")\n    }, locale && locale.emptyText || renderEmptyHandler('List'));\n  };\n\n  var prefixCls = getPrefixCls('list', customizePrefixCls);\n  var loadingProp = loading;\n\n  if (typeof loadingProp === 'boolean') {\n    loadingProp = {\n      spinning: loadingProp\n    };\n  }\n\n  var isLoading = loadingProp && loadingProp.spinning; // large => lg\n  // small => sm\n\n  var sizeCls = '';\n\n  switch (size) {\n    case 'large':\n      sizeCls = 'lg';\n      break;\n\n    case 'small':\n      sizeCls = 'sm';\n      break;\n\n    default:\n      break;\n  }\n\n  var classString = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-vertical\"), itemLayout === 'vertical'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(sizeCls), sizeCls), _defineProperty(_classNames, \"\".concat(prefixCls, \"-split\"), split), _defineProperty(_classNames, \"\".concat(prefixCls, \"-bordered\"), bordered), _defineProperty(_classNames, \"\".concat(prefixCls, \"-loading\"), isLoading), _defineProperty(_classNames, \"\".concat(prefixCls, \"-grid\"), !!grid), _defineProperty(_classNames, \"\".concat(prefixCls, \"-something-after-last-item\"), isSomethingAfterLastItem()), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n\n  var paginationProps = _extends(_extends(_extends({}, defaultPaginationProps), {\n    total: dataSource.length,\n    current: paginationCurrent,\n    pageSize: paginationSize\n  }), pagination || {});\n\n  var largestPage = Math.ceil(paginationProps.total / paginationProps.pageSize);\n\n  if (paginationProps.current > largestPage) {\n    paginationProps.current = largestPage;\n  }\n\n  var paginationContent = pagination ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-pagination\")\n  }, /*#__PURE__*/React.createElement(Pagination, _extends({}, paginationProps, {\n    onChange: onPaginationChange,\n    onShowSizeChange: onPaginationShowSizeChange\n  }))) : null;\n\n  var splitDataSource = _toConsumableArray(dataSource);\n\n  if (pagination) {\n    if (dataSource.length > (paginationProps.current - 1) * paginationProps.pageSize) {\n      splitDataSource = _toConsumableArray(dataSource).splice((paginationProps.current - 1) * paginationProps.pageSize, paginationProps.pageSize);\n    }\n  }\n\n  var screens = useBreakpoint();\n  var currentBreakpoint = React.useMemo(function () {\n    for (var i = 0; i < responsiveArray.length; i += 1) {\n      var breakpoint = responsiveArray[i];\n\n      if (screens[breakpoint]) {\n        return breakpoint;\n      }\n    }\n\n    return undefined;\n  }, [screens]);\n  var colStyle = React.useMemo(function () {\n    if (!grid) {\n      return undefined;\n    }\n\n    var columnCount = currentBreakpoint && grid[currentBreakpoint] ? grid[currentBreakpoint] : grid.column;\n\n    if (columnCount) {\n      return {\n        width: \"\".concat(100 / columnCount, \"%\"),\n        maxWidth: \"\".concat(100 / columnCount, \"%\")\n      };\n    }\n  }, [grid === null || grid === void 0 ? void 0 : grid.column, currentBreakpoint]);\n  var childrenContent = isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      minHeight: 53\n    }\n  });\n\n  if (splitDataSource.length > 0) {\n    var items = splitDataSource.map(function (item, index) {\n      return renderInnerItem(item, index);\n    });\n    var childrenList = React.Children.map(items, function (child, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: keys[index],\n        style: colStyle\n      }, child);\n    });\n    childrenContent = grid ? /*#__PURE__*/React.createElement(Row, {\n      gutter: grid.gutter\n    }, childrenList) : /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"\".concat(prefixCls, \"-items\")\n    }, items);\n  } else if (!children && !isLoading) {\n    childrenContent = renderEmptyFunc(prefixCls, renderEmpty);\n  }\n\n  var paginationPosition = paginationProps.position || 'bottom';\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: {\n      grid: grid,\n      itemLayout: itemLayout\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classString\n  }, rest), (paginationPosition === 'top' || paginationPosition === 'both') && paginationContent, header && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-header\")\n  }, header), /*#__PURE__*/React.createElement(Spin, loadingProp, childrenContent, children), footer && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-footer\")\n  }, footer), loadMore || (paginationPosition === 'bottom' || paginationPosition === 'both') && paginationContent));\n}\n\nList.Item = Item;\nexport default List;","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Item","_a","customizePrefixCls","prefixCls","children","actions","extra","className","colStyle","others","_React$useContext2","React","ListContext","grid","itemLayout","getPrefixCls","ConfigContext","actionsContent","concat","key","map","action","Element","itemChildren","_extends","classNames","_defineProperty","result","forEach","element","count","isItemContainsTextNodeAndNotSingular","cloneElement","Col","flex","style","Meta","avatar","title","description","classString","content","Consumer","List","_classNames","_a$pagination","pagination","_a$bordered","bordered","_a$split","split","loadMore","_a$dataSource","dataSource","size","header","footer","_a$loading","loading","rowKey","renderItem","locale","rest","paginationObj","_typeof","_React$useState","defaultCurrent","_React$useState2","_slicedToArray","paginationCurrent","setPaginationCurrent","_React$useState3","defaultPageSize","_React$useState4","paginationSize","setPaginationSize","_React$useContext","renderEmpty","direction","keys","triggerPaginationEvent","eventName","page","pageSize","onPaginationChange","onPaginationShowSizeChange","loadingProp","spinning","isLoading","sizeCls","paginationProps","current","total","largestPage","Math","ceil","paginationContent","Pagination","onChange","onShowSizeChange","splitDataSource","_toConsumableArray","splice","screens","useBreakpoint","currentBreakpoint","responsiveArray","breakpoint","columnCount","column","width","maxWidth","childrenContent","minHeight","items","item","index","renderInnerItem","childrenList","child","Row","gutter","renderEmptyHandler","emptyText","renderEmptyFunc","paginationPosition","position","Provider","value","Spin","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","this","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","Error","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","undefined","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","cachedIndices","callback","indices","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","document","createElement","scrollbarSize","recalc","canUseDOM","scrollDiv","top","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","source","getOwnPropertyDescriptors","defineProperties","defineProperty","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","props","_this","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_disablePointerEventsTimeoutId","setState","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","state","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","nextProps","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","polyfill","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","nonce","hostWindow","_window","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","offsetHeight","scrollListener","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","removeEventListener","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","bind","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_loadUnloadedRanges","registeredChild","rowRenderer","widthDescriptor","writable","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","slice","IntervalTree","root","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","get","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","SortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","msFlex","WebkitFlex","minWidth","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getScrollOffset","documentElement","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","container","containerElement","elementRect","containerRect","_elementRect","_containerRect","getPositionOffset","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll"],"sourceRoot":""}