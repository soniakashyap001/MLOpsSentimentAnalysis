{"version":3,"file":"static/js/791.d5233e6d.chunk.js","mappings":"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","sources":["common/components/KeyValueTagFullViewModal.tsx","common/components/KeyValueTag.tsx","common/components/TagSelectDropdown.tsx","common/hooks/useEditKeyValueTagsModal.tsx","common/utils/StringUtils.ts","common/components/KeyValueTagsEditorCell.tsx","model-registry/components/aliases/ModelVersionTableAliasesCell.tsx","model-registry/components/ModelVersionTable.tsx","model-registry/components/ModelView.tsx","model-registry/components/ModelPage.tsx","shared/building_blocks/CopyButton.tsx"],"sourcesContent":["import React from 'react';\nimport { Modal, Typography, CopyIcon, useDesignSystemTheme } from '@databricks/design-system';\nconst { Paragraph } = Typography;\nimport { CopyButton } from '@mlflow/mlflow/src/shared/building_blocks/CopyButton';\n\nexport interface KeyValueTagFullViewModalProps {\n  tagKey: string;\n  tagValue: string;\n  setIsKeyValueTagFullViewModalVisible: React.Dispatch<React.SetStateAction<boolean>>;\n  isKeyValueTagFullViewModalVisible: boolean;\n}\n\nexport const KeyValueTagFullViewModal = React.memo((props: KeyValueTagFullViewModalProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <Modal\n      title={'Tag: ' + props.tagKey}\n      visible={props.isKeyValueTagFullViewModalVisible}\n      onCancel={() => props.setIsKeyValueTagFullViewModalVisible(false)}\n    >\n      <div css={{ display: 'flex' }}>\n        <Paragraph css={{ flexGrow: 1 }}>\n          <pre\n            css={{\n              backgroundColor: theme.colors.backgroundPrimary,\n              marginTop: theme.spacing.sm,\n              whiteSpace: 'pre-wrap',\n              wordBreak: 'break-all',\n            }}\n          >\n            {props.tagValue}\n          </pre>\n        </Paragraph>\n        <div\n          css={{\n            marginTop: theme.spacing.sm,\n          }}\n        >\n          <CopyButton copyText={props.tagValue} showLabel={false} icon={<CopyIcon />} aria-label=\"Copy\" />\n        </div>\n      </div>\n    </Modal>\n  );\n});\n","import { Tag, LegacyTooltip, Typography } from '@databricks/design-system';\nimport { KeyValueEntity } from '../../experiment-tracking/types';\nimport React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { KeyValueTagFullViewModal } from './KeyValueTagFullViewModal';\nimport { Interpolation, Theme } from '@emotion/react';\n\n/**\n * An arbitrary number that is used to determine if a tag is too\n * long and should be truncated. We want to avoid short keys or values\n * in a long tag to be truncated\n * */\nexport const TRUNCATE_ON_CHARS_LENGTH = 30;\n\nfunction getTruncatedStyles(shouldTruncate = true): Interpolation<Theme> {\n  return shouldTruncate\n    ? {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        textWrap: 'nowrap',\n        whiteSpace: 'nowrap' as const,\n      }\n    : { whiteSpace: 'nowrap' as const };\n}\n\n/**\n * A <Tag /> wrapper used for displaying key-value entity\n */\nexport const KeyValueTag = ({\n  isClosable = false,\n  onClose,\n  tag,\n  enableFullViewModal = false,\n  charLimit = TRUNCATE_ON_CHARS_LENGTH,\n  maxWidth = 300,\n  className,\n}: {\n  isClosable?: boolean;\n  onClose?: () => void;\n  tag: KeyValueEntity;\n  enableFullViewModal?: boolean;\n  charLimit?: number;\n  maxWidth?: number;\n  className?: string;\n}) => {\n  const intl = useIntl();\n\n  const [isKeyValueTagFullViewModalVisible, setIsKeyValueTagFullViewModalVisible] = useState(false);\n\n  const { shouldTruncateKey, shouldTruncateValue } = getKeyAndValueComplexTruncation(tag, charLimit);\n  const allowFullViewModal = enableFullViewModal && (shouldTruncateKey || shouldTruncateValue);\n\n  const fullViewModalLabel = intl.formatMessage({\n    defaultMessage: 'Click to see more',\n    description: 'Run page > Overview > Tags cell > Tag',\n  });\n\n  return (\n    <div>\n      <Tag closable={isClosable} onClose={onClose} title={tag.key} className={className}>\n        <LegacyTooltip title={allowFullViewModal ? fullViewModalLabel : ''}>\n          <span\n            css={{ maxWidth, display: 'inline-flex' }}\n            onClick={() => (allowFullViewModal ? setIsKeyValueTagFullViewModalVisible(true) : undefined)}\n          >\n            <Typography.Text bold title={tag.key} css={getTruncatedStyles(shouldTruncateKey)}>\n              {tag.key}\n            </Typography.Text>\n            {tag.value && (\n              <Typography.Text title={tag.value} css={getTruncatedStyles(shouldTruncateValue)}>\n                : {tag.value}\n              </Typography.Text>\n            )}\n          </span>\n        </LegacyTooltip>\n      </Tag>\n      <div>\n        {isKeyValueTagFullViewModalVisible && (\n          <KeyValueTagFullViewModal\n            tagKey={tag.key}\n            tagValue={tag.value}\n            isKeyValueTagFullViewModalVisible={isKeyValueTagFullViewModalVisible}\n            setIsKeyValueTagFullViewModalVisible={setIsKeyValueTagFullViewModalVisible}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport function getKeyAndValueComplexTruncation(\n  tag: KeyValueEntity,\n  charLimit = TRUNCATE_ON_CHARS_LENGTH,\n): { shouldTruncateKey: boolean; shouldTruncateValue: boolean } {\n  const { key, value } = tag;\n  const fullLength = key.length + value.length;\n  const isKeyLonger = key.length > value.length;\n  const shorterLength = isKeyLonger ? value.length : key.length;\n\n  // No need to truncate if tag is short enough\n  if (fullLength <= charLimit) return { shouldTruncateKey: false, shouldTruncateValue: false };\n  // If the shorter string is too long, truncate both key and value.\n  if (shorterLength > charLimit / 2) return { shouldTruncateKey: true, shouldTruncateValue: true };\n\n  // Otherwise truncate the longer string\n  return {\n    shouldTruncateKey: isKeyLonger,\n    shouldTruncateValue: !isKeyLonger,\n  };\n}\n","import { sortedIndexOf } from 'lodash';\nimport React, { useMemo, useRef, useState } from 'react';\nimport { Control, useController } from 'react-hook-form';\nimport { useIntl } from 'react-intl';\n\nimport { PlusIcon, LegacySelect, LegacyTooltip, useDesignSystemTheme } from '@databricks/design-system';\nimport { KeyValueEntity } from '../../experiment-tracking/types';\n\n/**\n * Will show an extra row at the bottom of the dropdown menu to create a new tag when\n * The user has typed something in the search input\n * and either\n * 1. The search input is not an exact match for an existing tag name\n * 2. There are no tags available based on search input\n */\n\nfunction DropdownMenu(menu: React.ReactElement, allAvailableTags: string[]) {\n  const intl = useIntl();\n  const { theme } = useDesignSystemTheme();\n  const searchValue = menu.props.searchValue.toLowerCase();\n\n  const resolvedMenu = useMemo(() => {\n    if (!searchValue) return menu;\n\n    const doesTagExists = sortedIndexOf(allAvailableTags, searchValue) >= 0;\n    if (doesTagExists) return menu;\n\n    const isValidTagKey = /^[^,.:/=\\-\\s]+$/.test(searchValue);\n\n    // Overriding the menu to add a new option at the top\n    return React.cloneElement(menu, {\n      flattenOptions: [\n        {\n          data: {\n            value: searchValue,\n            disabled: !isValidTagKey,\n            style: {\n              color: isValidTagKey ? theme.colors.actionTertiaryTextDefault : theme.colors.actionDisabledText,\n            },\n            children: (\n              <LegacyTooltip\n                title={\n                  isValidTagKey\n                    ? undefined\n                    : intl.formatMessage({\n                        defaultMessage: ', . : / - = and blank spaces are not allowed',\n                        description:\n                          'Key-value tag editor modal > Tag dropdown Manage Modal > Invalid characters error',\n                      })\n                }\n                placement=\"right\"\n              >\n                <span css={{ display: 'block' }}>\n                  <PlusIcon css={{ marginRight: theme.spacing.sm }} />\n                  {intl.formatMessage(\n                    {\n                      defaultMessage: 'Add tag \"{tagKey}\"',\n                      description: 'Key-value tag editor modal > Tag dropdown Manage Modal > Add new tag button',\n                    },\n                    {\n                      tagKey: searchValue,\n                    },\n                  )}\n                </span>\n              </LegacyTooltip>\n            ),\n          },\n          key: searchValue,\n          groupOption: false,\n        },\n        ...menu.props.flattenOptions,\n      ],\n    });\n  }, [allAvailableTags, menu, searchValue, intl, theme]);\n\n  return resolvedMenu;\n}\n\nfunction getDropdownMenu(allAvailableTags: string[]) {\n  return (menu: React.ReactElement) => DropdownMenu(menu, allAvailableTags);\n}\n\n/**\n * Used in tag edit feature, allows selecting existing / adding new tag value\n */\nexport function TagKeySelectDropdown({\n  allAvailableTags,\n  control,\n  onKeyChangeCallback,\n}: {\n  allAvailableTags: string[];\n  control: Control<KeyValueEntity>;\n  onKeyChangeCallback?: (key?: string) => void;\n}) {\n  const intl = useIntl();\n  const [isOpen, setIsOpen] = useState(false);\n  const selectRef = useRef<{ blur: () => void; focus: () => void }>(null);\n\n  const { field, fieldState } = useController({\n    control: control,\n    name: 'key',\n    rules: {\n      required: {\n        message: intl.formatMessage({\n          defaultMessage: 'A tag key is required',\n          description: 'Key-value tag editor modal > Tag dropdown > Tag key required error message',\n        }),\n        value: true,\n      },\n    },\n  });\n\n  const handleDropdownVisibleChange = (visible: boolean) => {\n    setIsOpen(visible);\n  };\n\n  const handleClear = () => {\n    field.onChange(undefined);\n    onKeyChangeCallback?.(undefined);\n  };\n\n  const handleSelect = (key: string) => {\n    field.onChange(key);\n    onKeyChangeCallback?.(key);\n  };\n\n  return (\n    <LegacySelect\n      allowClear\n      ref={selectRef}\n      dangerouslySetAntdProps={{\n        showSearch: true,\n        dropdownRender: getDropdownMenu(allAvailableTags),\n      }}\n      css={{ width: '100%' }}\n      placeholder={intl.formatMessage({\n        defaultMessage: 'Type a key',\n        description: 'Key-value tag editor modal > Tag dropdown > Tag input placeholder',\n      })}\n      value={field.value}\n      defaultValue={field.value}\n      open={isOpen}\n      onDropdownVisibleChange={handleDropdownVisibleChange}\n      filterOption={(input, option) => option?.value.toLowerCase().includes(input.toLowerCase())}\n      onSelect={handleSelect}\n      onClear={handleClear}\n      validationState={fieldState.error ? 'error' : undefined}\n    >\n      {allAvailableTags.map((tag) => (\n        <LegacySelect.Option value={tag} key={tag}>\n          {tag}\n        </LegacySelect.Option>\n      ))}\n    </LegacySelect>\n  );\n}\n","import { isEqual, sortBy } from 'lodash';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport { truncate } from 'lodash';\n\nimport {\n  Button,\n  FormUI,\n  Modal,\n  PlusIcon,\n  Popover,\n  RHFControlledComponents,\n  RestoreAntDDefaultClsPrefix,\n  LegacyTooltip,\n  useDesignSystemTheme,\n} from '@databricks/design-system';\nimport { Typography } from '@databricks/design-system';\nimport { KeyValueEntity } from '../../experiment-tracking/types';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useForm } from 'react-hook-form';\nimport { TagKeySelectDropdown } from '../components/TagSelectDropdown';\nimport { KeyValueTag } from '../components/KeyValueTag';\nimport { ErrorWrapper } from '../utils/ErrorWrapper';\n\nfunction getTagsMap(tags: KeyValueEntity[]) {\n  return new Map(tags.map((tag) => [tag.key, tag]));\n}\n\n/**\n * Provides methods to initialize and display modal used to add and remove tags from any compatible entity\n */\nexport const useEditKeyValueTagsModal = <T extends { tags?: KeyValueEntity[] }>({\n  onSuccess,\n  saveTagsHandler,\n  allAvailableTags,\n  valueRequired = false,\n}: {\n  onSuccess?: () => void;\n  saveTagsHandler: (editedEntity: T, existingTags: KeyValueEntity[], newTags: KeyValueEntity[]) => Promise<any>;\n  allAvailableTags?: string[];\n  valueRequired?: boolean;\n}) => {\n  const editedEntityRef = useRef<T>();\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const { theme } = useDesignSystemTheme();\n\n  const [initialTags, setInitialTags] = useState<Map<string, KeyValueEntity>>(new Map());\n  const [finalTags, setFinalTags] = useState<Map<string, KeyValueEntity>>(new Map());\n\n  const [showModal, setShowModal] = useState(false);\n\n  const form = useForm<KeyValueEntity>({\n    defaultValues: {\n      key: undefined,\n      value: '',\n    },\n  });\n\n  const hideModal = () => setShowModal(false);\n\n  /**\n   * Function used to invoke the modal and start editing tags of the particular model version\n   */\n  const showEditTagsModal = useCallback(\n    (editedEntity: T) => {\n      editedEntityRef.current = editedEntity;\n      setInitialTags(getTagsMap(editedEntity.tags || []));\n      setFinalTags(getTagsMap(editedEntity.tags || []));\n      form.reset();\n\n      setShowModal(true);\n    },\n    [form],\n  );\n\n  const saveTags = async () => {\n    if (!editedEntityRef.current) {\n      return;\n    }\n    setErrorMessage('');\n    setIsLoading(true);\n    saveTagsHandler(editedEntityRef.current, Array.from(initialTags.values()), Array.from(finalTags.values()))\n      .then(() => {\n        hideModal();\n        onSuccess?.();\n        setIsLoading(false);\n      })\n      .catch((e: ErrorWrapper | Error) => {\n        setIsLoading(false);\n        setErrorMessage(e instanceof ErrorWrapper ? e.getUserVisibleError()?.message : e.message);\n      });\n  };\n\n  const intl = useIntl();\n  const formValues = form.watch();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const hasNewValues = useMemo(\n    () => !isEqual(sortBy(Array.from(initialTags.values()), 'key'), sortBy(Array.from(finalTags.values()), 'key')),\n    [initialTags, finalTags],\n  );\n  const isDirty = formValues.key || formValues.value;\n  const showPopoverMessage = hasNewValues && isDirty;\n\n  const onKeyChangeCallback = (key: string | undefined) => {\n    const tag = key ? finalTags.get(key) : undefined;\n    /**\n     * If a tag value exists for provided key, set the value to the existing tag value\n     */\n    form.setValue('value', tag?.value ?? '');\n  };\n\n  const handleTagDelete = ({ key }: KeyValueEntity) => {\n    setFinalTags((currentFinalTags) => {\n      currentFinalTags.delete(key);\n      return new Map(currentFinalTags);\n    });\n  };\n\n  const onSubmit = () => {\n    // Do not accept form if no value provided while it's required\n    if (valueRequired && !formValues.value.trim()) {\n      return;\n    }\n\n    // Add new tag to existing tags leaving only one tag per key value\n    const newEntries = new Map(finalTags);\n    newEntries.set(formValues.key, formValues);\n\n    setFinalTags(newEntries);\n    form.reset();\n  };\n\n  const EditTagsModal = (\n    <Modal\n      destroyOnClose\n      visible={showModal}\n      title={\n        <FormattedMessage\n          defaultMessage=\"Add/Edit tags\"\n          description=\"Key-value tag editor modal > Title of the update tags modal\"\n        />\n      }\n      onCancel={hideModal}\n      footer={\n        <RestoreAntDDefaultClsPrefix>\n          <Button\n            componentId=\"codegen_mlflow_app_src_common_hooks_useeditkeyvaluetagsmodal.tsx_147\"\n            dangerouslyUseFocusPseudoClass\n            onClick={hideModal}\n            /**\n             * Hack: The footer will remove the margin to the save tags button\n             * if the button if wrapped on another component.\n             */\n            css={{ marginRight: !hasNewValues ? theme.spacing.sm : 0 }}\n          >\n            {intl.formatMessage({\n              defaultMessage: 'Cancel',\n              description: 'Key-value tag editor modal > Manage Tag cancel button',\n            })}\n          </Button>\n          {showPopoverMessage ? (\n            <UnsavedTagPopoverTrigger formValues={formValues} isLoading={isLoading} onSaveTask={saveTags} />\n          ) : (\n            <LegacyTooltip\n              title={\n                !hasNewValues\n                  ? intl.formatMessage({\n                      defaultMessage: 'Please add or remove one or more tags before saving',\n                      description: 'Key-value tag editor modal > Tag disabled message',\n                    })\n                  : undefined\n              }\n            >\n              <Button\n                componentId=\"codegen_mlflow_app_src_common_hooks_useeditkeyvaluetagsmodal.tsx_174\"\n                dangerouslyUseFocusPseudoClass\n                disabled={!hasNewValues}\n                loading={isLoading}\n                type=\"primary\"\n                onClick={saveTags}\n              >\n                {intl.formatMessage({\n                  defaultMessage: 'Save tags',\n                  description: 'Key-value tag editor modal > Manage Tag save button',\n                })}\n              </Button>\n            </LegacyTooltip>\n          )}\n        </RestoreAntDDefaultClsPrefix>\n      }\n    >\n      <form\n        onSubmit={form.handleSubmit(onSubmit)}\n        css={{ display: 'flex', alignItems: 'flex-end', gap: theme.spacing.md }}\n      >\n        <div css={{ minWidth: 0, display: 'flex', gap: theme.spacing.md, flex: 1 }}>\n          <div css={{ flex: 1 }}>\n            <FormUI.Label htmlFor=\"key\">\n              {intl.formatMessage({\n                defaultMessage: 'Key',\n                description: 'Key-value tag editor modal > Key input label',\n              })}\n            </FormUI.Label>\n            <TagKeySelectDropdown\n              allAvailableTags={allAvailableTags || []}\n              control={form.control}\n              onKeyChangeCallback={onKeyChangeCallback}\n            />\n          </div>\n          <div css={{ flex: 1 }}>\n            <FormUI.Label htmlFor=\"value\">\n              {valueRequired\n                ? intl.formatMessage({\n                    defaultMessage: 'Value',\n                    description: 'Key-value tag editor modal > Value input label (required)',\n                  })\n                : intl.formatMessage({\n                    defaultMessage: 'Value (optional)',\n                    description: 'Key-value tag editor modal > Value input label',\n                  })}\n            </FormUI.Label>\n            <RHFControlledComponents.Input\n              name=\"value\"\n              control={form.control}\n              aria-label={\n                valueRequired\n                  ? intl.formatMessage({\n                      defaultMessage: 'Value',\n                      description: 'Key-value tag editor modal > Value input label (required)',\n                    })\n                  : intl.formatMessage({\n                      defaultMessage: 'Value (optional)',\n                      description: 'Key-value tag editor modal > Value input label',\n                    })\n              }\n              placeholder={intl.formatMessage({\n                defaultMessage: 'Type a value',\n                description: 'Key-value tag editor modal > Value input placeholder',\n              })}\n            />\n          </div>\n        </div>\n        <LegacyTooltip\n          title={intl.formatMessage({\n            defaultMessage: 'Add tag',\n            description: 'Key-value tag editor modal > Add tag button',\n          })}\n        >\n          <Button\n            componentId=\"codegen_mlflow_app_src_common_hooks_useeditkeyvaluetagsmodal.tsx_248\"\n            htmlType=\"submit\"\n            aria-label={intl.formatMessage({\n              defaultMessage: 'Add tag',\n              description: 'Key-value tag editor modal > Add tag button',\n            })}\n          >\n            <PlusIcon />\n          </Button>\n        </LegacyTooltip>\n      </form>\n      {errorMessage && <FormUI.Message type=\"error\" message={errorMessage} />}\n      <div\n        css={{\n          display: 'flex',\n          rowGap: theme.spacing.xs,\n          flexWrap: 'wrap',\n          marginTop: theme.spacing.sm,\n        }}\n      >\n        {Array.from(finalTags.values()).map((tag) => (\n          <KeyValueTag isClosable tag={tag} onClose={() => handleTagDelete(tag)} key={tag.key} />\n        ))}\n      </div>\n    </Modal>\n  );\n\n  return { EditTagsModal, showEditTagsModal, isLoading };\n};\n\nfunction UnsavedTagPopoverTrigger({\n  isLoading,\n  formValues,\n  onSaveTask,\n}: {\n  isLoading: boolean;\n  formValues: any;\n  onSaveTask: () => void;\n}) {\n  const intl = useIntl();\n  const { theme } = useDesignSystemTheme();\n\n  const tagKeyDisplay = `${truncate(formValues.key, { length: 20 }) || '_'}`;\n  const tagValueDisplay = formValues.value ? `:${truncate(formValues.value, { length: 20 })}` : '';\n  const fullTagDisplay = `${tagKeyDisplay}${tagValueDisplay}`;\n\n  const shownText = intl.formatMessage(\n    {\n      defaultMessage: 'Are you sure you want to save and close without adding \"{tag}\"',\n      description: 'Key-value tag editor modal > Unsaved tag message',\n    },\n    {\n      tag: fullTagDisplay,\n    },\n  );\n  return (\n    <Popover.Root>\n      <Popover.Trigger asChild>\n        <Button\n          componentId=\"codegen_mlflow_app_src_common_hooks_useeditkeyvaluetagsmodal.tsx_306\"\n          dangerouslyUseFocusPseudoClass\n          loading={isLoading}\n          type=\"primary\"\n        >\n          {intl.formatMessage({\n            defaultMessage: 'Save tags',\n            description: 'Key-value tag editor modal > Manage Tag save button',\n          })}\n        </Button>\n      </Popover.Trigger>\n      <Popover.Content align=\"end\" aria-label={shownText}>\n        <Typography.Paragraph css={{ maxWidth: 400 }}>{shownText}</Typography.Paragraph>\n        <Popover.Close asChild>\n          <Button\n            componentId=\"codegen_mlflow_app_src_common_hooks_useeditkeyvaluetagsmodal.tsx_316\"\n            onClick={onSaveTask}\n          >\n            {intl.formatMessage({\n              defaultMessage: 'Yes, save and close',\n              description: 'Key-value tag editor modal > Unsaved tag message > Yes, save and close button',\n            })}\n          </Button>\n        </Popover.Close>\n        <Popover.Close asChild>\n          <Button\n            componentId=\"codegen_mlflow_app_src_common_hooks_useeditkeyvaluetagsmodal.tsx_324\"\n            type=\"primary\"\n            css={{ marginLeft: theme.spacing.sm }}\n          >\n            {intl.formatMessage({\n              defaultMessage: 'Cancel',\n              description: 'Key-value tag editor modal > Unsaved tag message > cancel button',\n            })}\n          </Button>\n        </Popover.Close>\n        <Popover.Arrow />\n      </Popover.Content>\n    </Popover.Root>\n  );\n}\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport _ from 'lodash';\n// Import pako lazily to reduce bundle size\nconst lazyPako = () => import('pako');\n\nexport const truncateToFirstLineWithMaxLength = (str: any, maxLength: any) => {\n  const truncated = _.truncate(str, {\n    length: maxLength,\n  });\n  return _.takeWhile(truncated, (char) => char !== '\\n').join('');\n};\n\nexport const capitalizeFirstChar = (str: any) => {\n  if (!str || typeof str !== 'string' || str.length < 1) {\n    return str;\n  }\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\n\nexport const middleTruncateStr = (str: any, maxLen: any) => {\n  if (str.length > maxLen) {\n    const firstPartLen = Math.floor((maxLen - 3) / 2);\n    const lastPartLen = maxLen - 3 - firstPartLen;\n    return str.substring(0, firstPartLen) + '...' + str.substring(str.length - lastPartLen, str.length);\n  } else {\n    return str;\n  }\n};\n\nexport const capitalizeFirstLetter = (string: any) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nconst _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n/* eslint-disable no-bitwise */\n/**\n * UTF-8 safe version of base64 encoder\n * Source: http://www.webtoolkit.info/javascript_base64.html\n *\n * @param {string} input - Text to encode\n */\nexport const btoaUtf8 = (input: any) => {\n  let output = '';\n  let i = 0;\n\n  const result = _utf8_encode(input);\n\n  while (i < result.length) {\n    const chr1 = result.charCodeAt(i++);\n    const chr2 = result.charCodeAt(i++);\n    const chr3 = result.charCodeAt(i++);\n\n    const enc1 = chr1 >> 2;\n    const enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n    let enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n    let enc4 = chr3 & 63;\n\n    if (isNaN(chr2)) {\n      enc3 = enc4 = 64;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n\n    output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n  }\n\n  return output;\n};\n\n/**\n * UTF-8 safe version of base64 decoder\n * Source: http://www.webtoolkit.info/javascript_base64.html\n *\n * @param {string} input - Text to decode\n */\nexport const atobUtf8 = (input: any) => {\n  let output = '';\n  let i = 0;\n\n  const result = input?.replace(/[^A-Za-z0-9+/=]/g, '') || '';\n\n  while (i < result.length) {\n    const enc1 = _keyStr.indexOf(result.charAt(i++));\n    const enc2 = _keyStr.indexOf(result.charAt(i++));\n    const enc3 = _keyStr.indexOf(result.charAt(i++));\n    const enc4 = _keyStr.indexOf(result.charAt(i++));\n\n    const chr1 = (enc1 << 2) | (enc2 >> 4);\n    const chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n    const chr3 = ((enc3 & 3) << 6) | enc4;\n\n    output += String.fromCharCode(chr1);\n\n    if (enc3 !== 64) {\n      output += String.fromCharCode(chr2);\n    }\n\n    if (enc4 !== 64) {\n      output += String.fromCharCode(chr3);\n    }\n  }\n\n  return _utf8_decode(output);\n};\n\n/**\n * (private method) does a UTF-8 encoding\n *\n * @private\n * @param {string} string - Text to encode\n */\nconst _utf8_encode = (string = '') => {\n  const result = string.replace(/\\r\\n/g, '\\n');\n  let utftext = '';\n\n  for (let n = 0; n < result.length; n++) {\n    const c = result.charCodeAt(n);\n\n    if (c < 128) {\n      utftext += String.fromCharCode(c);\n    } else if (c > 127 && c < 2048) {\n      utftext += String.fromCharCode((c >> 6) | 192) + String.fromCharCode((c & 63) | 128);\n    } else {\n      utftext +=\n        String.fromCharCode((c >> 12) | 224) +\n        String.fromCharCode(((c >> 6) & 63) | 128) +\n        String.fromCharCode((c & 63) | 128);\n    }\n  }\n\n  return utftext;\n};\n\n/**\n * (private method) does a UTF-8 decoding\n *\n * @private\n * @param {string} utftext - UTF-8 text to dencode\n */\nconst _utf8_decode = (utftext = '') => {\n  let string = '';\n  let i = 0;\n\n  while (i < utftext.length) {\n    const c = utftext.charCodeAt(i);\n\n    if (c < 128) {\n      string += String.fromCharCode(c);\n      i++;\n    } else if (c > 191 && c < 224) {\n      const c2 = utftext.charCodeAt(i + 1);\n      string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n      i += 2;\n    } else {\n      const c2 = utftext.charCodeAt(i + 1);\n      const c3 = utftext.charCodeAt(i + 2);\n      string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n      i += 3;\n    }\n  }\n  return string;\n};\n/* eslint-enable no-bitwise */\n\n/**\n * Returns a SHA256 hash of the input string\n */\nexport const getStringSHA256 = (input: string) => {\n  return crypto.subtle.digest('SHA-256', new TextEncoder().encode(input)).then((arrayBuffer) => {\n    return Array.prototype.map.call(new Uint8Array(arrayBuffer), (x) => ('00' + x.toString(16)).slice(-2)).join('');\n  });\n};\n\nconst COMPRESSED_TEXT_DEFLATE_PREFIX = 'deflate;';\n\nexport const textCompressDeflate = async (text: string) => {\n  const pako = await lazyPako();\n  const binaryData = pako.deflate(text);\n\n  // Buffer-based implementation\n  if (typeof Buffer !== 'undefined') {\n    const b64encoded = Buffer.from(binaryData).toString('base64');\n    return `${COMPRESSED_TEXT_DEFLATE_PREFIX}${b64encoded}`;\n  }\n\n  // btoa-based implementation\n  const binaryString = Array.from(binaryData, (byte) => String.fromCodePoint(byte)).join('');\n  return `${COMPRESSED_TEXT_DEFLATE_PREFIX}${btoa(binaryString)}`;\n};\n\nexport const textDecompressDeflate = async (compressedText: string) => {\n  const pako = await lazyPako();\n  if (!compressedText.startsWith(COMPRESSED_TEXT_DEFLATE_PREFIX)) {\n    throw new Error('Invalid compressed text, payload header invalid');\n  }\n  const compressedTextWithoutPrefix = compressedText.slice(COMPRESSED_TEXT_DEFLATE_PREFIX.length);\n\n  // Buffer-based implementation\n  if (typeof Buffer !== 'undefined') {\n    const binaryString = Buffer.from(compressedTextWithoutPrefix, 'base64');\n    return pako.inflate(binaryString, { to: 'string' });\n  }\n\n  // atob-based implementation\n  const binaryString = atob(compressedTextWithoutPrefix);\n  return pako.inflate(\n    Uint8Array.from(binaryString, (m) => m.codePointAt(0) ?? 0),\n    { to: 'string' },\n  );\n};\n\nexport const isTextCompressedDeflate = (text: string) => text.startsWith(COMPRESSED_TEXT_DEFLATE_PREFIX);\n","import { Button, PencilIcon, useDesignSystemTheme } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport { KeyValueEntity } from '../../experiment-tracking/types';\nimport { KeyValueTag } from './KeyValueTag';\n\ninterface KeyValueTagsEditorCellProps {\n  tags?: KeyValueEntity[];\n  onAddEdit: () => void;\n}\n\n/**\n * A cell renderer used in tables, displaying a list of key-value tags with button for editing those\n */\nexport const KeyValueTagsEditorCell = ({ tags = [], onAddEdit }: KeyValueTagsEditorCellProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        '> *': {\n          marginRight: '0 !important',\n        },\n        gap: theme.spacing.xs,\n      }}\n    >\n      {tags.length < 1 ? (\n        <Button\n          componentId=\"codegen_mlflow_app_src_common_components_keyvaluetagseditorcell.tsx_29\"\n          size=\"small\"\n          type=\"link\"\n          onClick={onAddEdit}\n        >\n          <FormattedMessage defaultMessage=\"Add\" description=\"Key-value tag table cell > 'add' button label\" />\n        </Button>\n      ) : (\n        <>\n          {tags.map((tag) => (\n            <KeyValueTag tag={tag} key={`${tag.key}-${tag.value}`} />\n          ))}\n          <Button\n            componentId=\"codegen_mlflow_app_src_common_components_keyvaluetagseditorcell.tsx_37\"\n            size=\"small\"\n            icon={<PencilIcon />}\n            onClick={onAddEdit}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n","import { Button, PencilIcon, useDesignSystemTheme } from '@databricks/design-system';\nimport { ModelVersionAliasTag } from './ModelVersionAliasTag';\nimport { FormattedMessage } from 'react-intl';\n\ninterface ModelVersionTableAliasesCellProps {\n  aliases?: string[];\n  modelName: string;\n  version: string;\n  onAddEdit: () => void;\n}\n\nexport const ModelVersionTableAliasesCell = ({ aliases = [], onAddEdit }: ModelVersionTableAliasesCellProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={{\n        maxWidth: 300,\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start',\n        '> *': {\n          marginRight: '0 !important',\n        },\n        rowGap: theme.spacing.xs / 2,\n        columnGap: theme.spacing.xs,\n      }}\n    >\n      {aliases.length < 1 ? (\n        <Button\n          componentId=\"codegen_mlflow_app_src_model-registry_components_aliases_modelversiontablealiasescell.tsx_30\"\n          size=\"small\"\n          type=\"link\"\n          onClick={onAddEdit}\n        >\n          <FormattedMessage\n            defaultMessage=\"Add\"\n            description=\"Model registry > model version table > aliases column > 'add' button label\"\n          />\n        </Button>\n      ) : (\n        <>\n          {aliases.map((alias) => (\n            <ModelVersionAliasTag value={alias} key={alias} css={{ marginTop: theme.spacing.xs / 2 }} />\n          ))}\n          <Button\n            componentId=\"codegen_mlflow_app_src_model-registry_components_aliases_modelversiontablealiasescell.tsx_41\"\n            size=\"small\"\n            icon={<PencilIcon />}\n            onClick={onAddEdit}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n","import {\n  Empty,\n  NotificationIcon,\n  Pagination,\n  PlusIcon,\n  Table,\n  TableCell,\n  TableHeader,\n  TableRow,\n  TableRowSelectCell,\n  LegacyTooltip,\n  Typography,\n  useDesignSystemTheme,\n} from '@databricks/design-system';\nimport {\n  ColumnDef,\n  PaginationState,\n  RowSelectionState,\n  SortingState,\n  flexRender,\n  getCoreRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\nimport { KeyValueEntity, ModelEntity, ModelVersionInfoEntity, ModelAliasMap } from '../../experiment-tracking/types';\nimport { useEffect, useMemo, useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { RegisteringModelDocUrl } from '../../common/constants';\nimport {\n  ACTIVE_STAGES,\n  EMPTY_CELL_PLACEHOLDER,\n  ModelVersionStatusIcons,\n  StageTagComponents,\n  modelVersionStatusIconTooltips,\n} from '../constants';\nimport { Link } from '../../common/utils/RoutingUtils';\nimport { ModelRegistryRoutes } from '../routes';\nimport Utils from '../../common/utils/Utils';\nimport { KeyValueTagsEditorCell } from '../../common/components/KeyValueTagsEditorCell';\nimport { useDispatch } from 'react-redux';\nimport { ThunkDispatch } from '../../redux-types';\nimport { useEditKeyValueTagsModal } from '../../common/hooks/useEditKeyValueTagsModal';\nimport { useEditRegisteredModelAliasesModal } from '../hooks/useEditRegisteredModelAliasesModal';\nimport { updateModelVersionTagsApi } from '../actions';\nimport { ModelVersionTableAliasesCell } from './aliases/ModelVersionTableAliasesCell';\nimport { Interpolation, Theme } from '@emotion/react';\nimport { truncateToFirstLineWithMaxLength } from '../../common/utils/StringUtils';\nimport ExpandableList from '../../common/components/ExpandableList';\n\ntype ModelVersionTableProps = {\n  modelName: string;\n  modelVersions?: ModelVersionInfoEntity[];\n  activeStageOnly?: boolean;\n  onChange: (selectedRowKeys: string[], selectedRows: ModelVersionInfoEntity[]) => void;\n  modelEntity?: ModelEntity;\n  onMetadataUpdated: () => void;\n  usingNextModelsUI: boolean;\n  aliases?: ModelAliasMap;\n};\n\ntype ModelVersionColumnDef = ColumnDef<ModelVersionInfoEntity> & {\n  meta?: { styles?: Interpolation<Theme>; multiline?: boolean; className?: string };\n};\n\nenum COLUMN_IDS {\n  STATUS = 'STATUS',\n  VERSION = 'VERSION',\n  CREATION_TIMESTAMP = 'CREATION_TIMESTAMP',\n  USER_ID = 'USER_ID',\n  TAGS = 'TAGS',\n  STAGE = 'STAGE',\n  DESCRIPTION = 'DESCRIPTION',\n  ALIASES = 'ALIASES',\n}\n\nexport const ModelVersionTable = ({\n  modelName,\n  modelVersions,\n  activeStageOnly,\n  onChange,\n  modelEntity,\n  onMetadataUpdated,\n  usingNextModelsUI,\n  aliases,\n}: ModelVersionTableProps) => {\n  const aliasesByVersion = useMemo(() => {\n    const result: Record<string, string[]> = {};\n    aliases?.forEach(({ alias, version }) => {\n      if (!result[version]) {\n        result[version] = [];\n      }\n      result[version].push(alias);\n    });\n    return result;\n  }, [aliases]);\n  const versions = useMemo(\n    () =>\n      activeStageOnly\n        ? (modelVersions || []).filter(({ current_stage }) => ACTIVE_STAGES.includes(current_stage))\n        : modelVersions,\n    [activeStageOnly, modelVersions],\n  );\n\n  const { theme } = useDesignSystemTheme();\n  const intl = useIntl();\n\n  const allTagsKeys = useMemo(() => {\n    const allTagsList: KeyValueEntity[] = versions?.map((modelVersion) => modelVersion?.tags || []).flat() || [];\n\n    // Extract keys, remove duplicates and sort the\n    return Array.from(new Set(allTagsList.map(({ key }) => key))).sort();\n  }, [versions]);\n\n  const dispatch = useDispatch<ThunkDispatch>();\n\n  const { EditTagsModal, showEditTagsModal } = useEditKeyValueTagsModal<ModelVersionInfoEntity>({\n    allAvailableTags: allTagsKeys,\n    saveTagsHandler: async (modelVersion, existingTags, newTags) =>\n      dispatch(updateModelVersionTagsApi(modelVersion, existingTags, newTags)),\n    onSuccess: onMetadataUpdated,\n  });\n\n  const { EditAliasesModal, showEditAliasesModal } = useEditRegisteredModelAliasesModal({\n    model: modelEntity || null,\n    onSuccess: onMetadataUpdated,\n  });\n\n  const [rowSelection, setRowSelection] = useState<RowSelectionState>({});\n\n  const [pagination, setPagination] = useState<PaginationState>({\n    pageSize: 10,\n    pageIndex: 0,\n  });\n\n  useEffect(() => {\n    const selectedVersions = (versions || []).filter(({ version }) => rowSelection[version]);\n    const selectedVersionNumbers = selectedVersions.map(({ version }) => version);\n    onChange(selectedVersionNumbers, selectedVersions);\n  }, [rowSelection, onChange, versions]);\n\n  const tableColumns = useMemo(() => {\n    const columns: ModelVersionColumnDef[] = [\n      {\n        id: COLUMN_IDS.STATUS,\n        enableSorting: false,\n        header: '', // Status column does not have title\n        meta: { styles: { flexBasis: theme.general.heightSm, flexGrow: 0 } },\n        cell: ({ row: { original } }) => {\n          const { status, status_message } = original || {};\n          return (\n            <LegacyTooltip title={status_message || modelVersionStatusIconTooltips[status]}>\n              <Typography.Text>{ModelVersionStatusIcons[status]}</Typography.Text>\n            </LegacyTooltip>\n          );\n        },\n      },\n    ];\n    columns.push(\n      {\n        id: COLUMN_IDS.VERSION,\n        enableSorting: false,\n        header: intl.formatMessage({\n          defaultMessage: 'Version',\n          description: 'Column title text for model version in model version table',\n        }),\n        meta: { className: 'model-version' },\n        accessorKey: 'version',\n        cell: ({ getValue }) => (\n          <FormattedMessage\n            defaultMessage=\"<link>Version {versionNumber}</link>\"\n            description=\"Link to model version in the model version table\"\n            values={{\n              link: (chunks) => (\n                <Link to={ModelRegistryRoutes.getModelVersionPageRoute(modelName, String(getValue()))}>{chunks}</Link>\n              ),\n              versionNumber: getValue(),\n            }}\n          />\n        ),\n      },\n      {\n        id: COLUMN_IDS.CREATION_TIMESTAMP,\n        enableSorting: true,\n        meta: { styles: { minWidth: 200 } },\n        header: intl.formatMessage({\n          defaultMessage: 'Registered at',\n          description: 'Column title text for created at timestamp in model version table',\n        }),\n        accessorKey: 'creation_timestamp',\n        cell: ({ getValue }) => Utils.formatTimestamp(getValue()),\n      },\n\n      {\n        id: COLUMN_IDS.USER_ID,\n        enableSorting: false,\n        meta: { styles: { minWidth: 100 } },\n        header: intl.formatMessage({\n          defaultMessage: 'Created by',\n          description: 'Column title text for creator username in model version table',\n        }),\n        accessorKey: 'user_id',\n        cell: ({ getValue }) => <span>{getValue()}</span>,\n      },\n    );\n\n    if (usingNextModelsUI) {\n      // Display tags and aliases columns only when \"new models UI\" is flipped\n      columns.push(\n        {\n          id: COLUMN_IDS.TAGS,\n          enableSorting: false,\n          header: intl.formatMessage({\n            defaultMessage: 'Tags',\n            description: 'Column title text for model version tags in model version table',\n          }),\n          meta: { styles: { flex: 2 } },\n          accessorKey: 'tags',\n          cell: ({ getValue, row: { original } }) => {\n            return (\n              <KeyValueTagsEditorCell\n                tags={getValue() as KeyValueEntity[]}\n                onAddEdit={() => {\n                  showEditTagsModal?.(original);\n                }}\n              />\n            );\n          },\n        },\n        {\n          id: COLUMN_IDS.ALIASES,\n          accessorKey: 'aliases',\n          enableSorting: false,\n          header: intl.formatMessage({\n            defaultMessage: 'Aliases',\n            description: 'Column title text for model version aliases in model version table',\n          }),\n          meta: { styles: { flex: 2 }, multiline: true },\n          cell: ({ getValue, row: { original } }) => {\n            const mvAliases = aliasesByVersion[original.version] || [];\n            return (\n              <ModelVersionTableAliasesCell\n                modelName={modelName}\n                version={original.version}\n                aliases={mvAliases}\n                onAddEdit={() => {\n                  showEditAliasesModal?.(original.version);\n                }}\n              />\n            );\n          },\n        },\n      );\n    } else {\n      // If not, display legacy \"Stage\" columns\n      columns.push({\n        id: COLUMN_IDS.STAGE,\n        enableSorting: false,\n        header: intl.formatMessage({\n          defaultMessage: 'Stage',\n          description: 'Column title text for model version stage in model version table',\n        }),\n        accessorKey: 'current_stage',\n        cell: ({ getValue }) => {\n          return StageTagComponents[getValue() as string];\n        },\n      });\n    }\n    columns.push({\n      id: COLUMN_IDS.DESCRIPTION,\n      enableSorting: false,\n      header: intl.formatMessage({\n        defaultMessage: 'Description',\n        description: 'Column title text for description in model version table',\n      }),\n      meta: { styles: { flex: 2 } },\n      accessorKey: 'description',\n      cell: ({ getValue }) => truncateToFirstLineWithMaxLength(getValue(), 32),\n    });\n    return columns;\n  }, [theme, intl, modelName, showEditTagsModal, showEditAliasesModal, usingNextModelsUI, aliasesByVersion]);\n\n  const [sorting, setSorting] = useState<SortingState>([{ id: COLUMN_IDS.CREATION_TIMESTAMP, desc: true }]);\n\n  const table = useReactTable<ModelVersionInfoEntity>({\n    data: versions || [],\n    columns: tableColumns,\n    state: {\n      pagination,\n      rowSelection,\n      sorting,\n    },\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getRowId: ({ version }) => version,\n    onRowSelectionChange: setRowSelection,\n    onSortingChange: setSorting,\n  });\n\n  const isEmpty = () => table.getRowModel().rows.length === 0;\n\n  const getLearnMoreLinkUrl = () => {\n    return RegisteringModelDocUrl;\n  };\n\n  const paginationComponent = (\n    <Pagination\n      currentPageIndex={pagination.pageIndex + 1}\n      numTotal={(versions || []).length}\n      onChange={(page, pageSize) => {\n        setPagination({\n          pageSize: pageSize || pagination.pageSize,\n          pageIndex: page - 1,\n        });\n      }}\n      pageSize={pagination.pageSize}\n    />\n  );\n\n  const emptyComponent = (\n    <Empty\n      description={\n        <FormattedMessage\n          defaultMessage=\"No models versions are registered yet. <link>Learn more</link> about how to\n          register a model version.\"\n          description=\"Message text when no model versions are registered\"\n          values={{\n            link: (chunks) => (\n              <Typography.Link target=\"_blank\" href={getLearnMoreLinkUrl()}>\n                {chunks}\n              </Typography.Link>\n            ),\n          }}\n        />\n      }\n      image={<PlusIcon />}\n    />\n  );\n\n  return (\n    <>\n      <Table\n        data-testid=\"model-list-table\"\n        pagination={paginationComponent}\n        scrollable\n        empty={isEmpty() ? emptyComponent : undefined}\n        someRowsSelected={table.getIsSomeRowsSelected() || table.getIsAllRowsSelected()}\n      >\n        <TableRow isHeader>\n          <TableRowSelectCell\n            checked={table.getIsAllRowsSelected()}\n            indeterminate={table.getIsSomeRowsSelected()}\n            onChange={table.getToggleAllRowsSelectedHandler()}\n          />\n          {table.getLeafHeaders().map((header) => (\n            <TableHeader\n              multiline={false}\n              key={header.id}\n              sortable={header.column.getCanSort()}\n              sortDirection={header.column.getIsSorted() || 'none'}\n              onToggleSort={header.column.getToggleSortingHandler()}\n              css={(header.column.columnDef as ModelVersionColumnDef).meta?.styles}\n            >\n              {flexRender(header.column.columnDef.header, header.getContext())}\n            </TableHeader>\n          ))}\n        </TableRow>\n        {table.getRowModel().rows.map((row) => (\n          <TableRow\n            key={row.id}\n            css={{\n              '.table-row-select-cell': {\n                alignItems: 'flex-start',\n              },\n            }}\n          >\n            <TableRowSelectCell checked={row.getIsSelected()} onChange={row.getToggleSelectedHandler()} />\n            {row.getAllCells().map((cell) => (\n              <TableCell\n                className={(cell.column.columnDef as ModelVersionColumnDef).meta?.className}\n                multiline={(cell.column.columnDef as ModelVersionColumnDef).meta?.multiline}\n                key={cell.id}\n                css={(cell.column.columnDef as ModelVersionColumnDef).meta?.styles}\n              >\n                {flexRender(cell.column.columnDef.cell, cell.getContext())}\n              </TableCell>\n            ))}\n          </TableRow>\n        ))}\n      </Table>\n      {EditTagsModal}\n      {EditAliasesModal}\n    </>\n  );\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport { ModelVersionTable } from './ModelVersionTable';\nimport Utils from '../../common/utils/Utils';\nimport { Link, NavigateFunction } from '../../common/utils/RoutingUtils';\nimport { ModelRegistryRoutes } from '../routes';\nimport { message } from 'antd';\nimport { ACTIVE_STAGES } from '../constants';\nimport { CollapsibleSection } from '../../common/components/CollapsibleSection';\nimport { EditableNote } from '../../common/components/EditableNote';\nimport { EditableTagsTableView } from '../../common/components/EditableTagsTableView';\nimport { getRegisteredModelTags } from '../reducers';\nimport { setRegisteredModelTagApi, deleteRegisteredModelTagApi } from '../actions';\nimport { connect } from 'react-redux';\nimport { OverflowMenu, PageHeader } from '../../shared/building_blocks/PageHeader';\nimport { FormattedMessage, type IntlShape, injectIntl } from 'react-intl';\nimport { Button, SegmentedControlGroup, SegmentedControlButton, DangerModal } from '@databricks/design-system';\nimport { Descriptions } from '../../common/components/Descriptions';\nimport { ModelVersionInfoEntity, type ModelEntity } from '../../experiment-tracking/types';\nimport { shouldShowModelsNextUI } from '../../common/utils/FeatureUtils';\nimport { ModelsNextUIToggleSwitch } from './ModelsNextUIToggleSwitch';\nimport { withNextModelsUIContext } from '../hooks/useNextModelsUI';\n\nexport const StageFilters = {\n  ALL: 'ALL',\n  ACTIVE: 'ACTIVE',\n};\n\ntype ModelViewImplProps = {\n  model?: ModelEntity;\n  modelVersions?: ModelVersionInfoEntity[];\n  handleEditDescription: (...args: any[]) => any;\n  handleDelete: (...args: any[]) => any;\n  navigate: NavigateFunction;\n  showEditPermissionModal: (...args: any[]) => any;\n  activePane?: any; // TODO: PropTypes.oneOf(Object.values(PANES))\n  emailSubscriptionStatus?: string;\n  userLevelEmailSubscriptionStatus?: string;\n  handleEmailNotificationPreferenceChange?: (...args: any[]) => any;\n  tags: any;\n  setRegisteredModelTagApi: (...args: any[]) => any;\n  deleteRegisteredModelTagApi: (...args: any[]) => any;\n  intl: IntlShape;\n  onMetadataUpdated: () => void;\n  usingNextModelsUI: boolean;\n};\n\ntype ModelViewImplState = any;\n\nexport class ModelViewImpl extends React.Component<ModelViewImplProps, ModelViewImplState> {\n  constructor(props: ModelViewImplProps) {\n    super(props);\n    this.onCompare = this.onCompare.bind(this);\n  }\n\n  state = {\n    stageFilter: StageFilters.ALL,\n    showDescriptionEditor: false,\n    isDeleteModalVisible: false,\n    isDeleteModalConfirmLoading: false,\n    runsSelected: {},\n    isTagsRequestPending: false,\n    updatingEmailPreferences: false,\n  };\n\n  formRef = React.createRef();\n\n  componentDidMount() {\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    const pageTitle = `${this.props.model.name} - MLflow Model`;\n    Utils.updatePageTitle(pageTitle);\n  }\n\n  handleStageFilterChange = (e: any) => {\n    this.setState({ stageFilter: e.target.value });\n  };\n\n  getActiveVersionsCount() {\n    const { modelVersions } = this.props;\n    return modelVersions ? modelVersions.filter((v) => ACTIVE_STAGES.includes(v.current_stage)).length : 0;\n  }\n\n  handleCancelEditDescription = () => {\n    this.setState({ showDescriptionEditor: false });\n  };\n\n  handleSubmitEditDescription = (description: any) => {\n    return this.props.handleEditDescription(description).then(() => {\n      this.setState({ showDescriptionEditor: false });\n    });\n  };\n\n  startEditingDescription = (e: any) => {\n    e.stopPropagation();\n    this.setState({ showDescriptionEditor: true });\n  };\n\n  getOverflowMenuItems() {\n    const menuItems = [\n      {\n        id: 'delete',\n        itemName: (\n          <FormattedMessage\n            defaultMessage=\"Delete\"\n            // eslint-disable-next-line max-len\n            description=\"Text for disabled delete button due to active versions on model view page header\"\n          />\n        ),\n        onClick: this.showDeleteModal,\n        disabled: this.getActiveVersionsCount() > 0,\n      },\n    ];\n\n    return menuItems;\n  }\n\n  showDeleteModal = () => {\n    this.setState({ isDeleteModalVisible: true });\n  };\n\n  hideDeleteModal = () => {\n    this.setState({ isDeleteModalVisible: false });\n  };\n\n  showConfirmLoading = () => {\n    this.setState({ isDeleteModalConfirmLoading: true });\n  };\n\n  hideConfirmLoading = () => {\n    this.setState({ isDeleteModalConfirmLoading: false });\n  };\n\n  handleDeleteConfirm = () => {\n    const { navigate } = this.props;\n    this.showConfirmLoading();\n    this.props\n      .handleDelete()\n      .then(() => {\n        navigate(ModelRegistryRoutes.modelListPageRoute);\n      })\n      .catch((e: any) => {\n        this.hideConfirmLoading();\n        Utils.logErrorAndNotifyUser(e);\n      });\n  };\n\n  handleAddTag = (values: any) => {\n    const form = this.formRef.current;\n    const { model } = this.props;\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    const modelName = model.name;\n    this.setState({ isTagsRequestPending: true });\n    this.props\n      .setRegisteredModelTagApi(modelName, values.name, values.value)\n      .then(() => {\n        this.setState({ isTagsRequestPending: false });\n        (form as any).resetFields();\n      })\n      .catch((ex: any) => {\n        this.setState({ isTagsRequestPending: false });\n        console.error(ex);\n        message.error('Failed to add tag. Error: ' + ex.getUserVisibleError());\n      });\n  };\n\n  handleSaveEdit = ({ name, value }: any) => {\n    const { model } = this.props;\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    const modelName = model.name;\n    return this.props.setRegisteredModelTagApi(modelName, name, value).catch((ex: any) => {\n      console.error(ex);\n      message.error('Failed to set tag. Error: ' + ex.getUserVisibleError());\n    });\n  };\n\n  handleDeleteTag = ({ name }: any) => {\n    const { model } = this.props;\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    const modelName = model.name;\n    return this.props.deleteRegisteredModelTagApi(modelName, name).catch((ex: any) => {\n      console.error(ex);\n      message.error('Failed to delete tag. Error: ' + ex.getUserVisibleError());\n    });\n  };\n\n  onChange = (selectedRowKeys: any, selectedRows: any) => {\n    const newState = Object.assign({}, this.state);\n    newState.runsSelected = {};\n    selectedRows.forEach((row: any) => {\n      newState.runsSelected = {\n        ...newState.runsSelected,\n        [row.version]: row.run_id,\n      };\n    });\n    this.setState(newState);\n  };\n\n  onCompare() {\n    if (!this.props.model) {\n      return;\n    }\n    this.props.navigate(\n      ModelRegistryRoutes.getCompareModelVersionsPageRoute(this.props.model.name, this.state.runsSelected),\n    );\n  }\n\n  renderDescriptionEditIcon() {\n    return (\n      <Button\n        componentId=\"codegen_mlflow_app_src_model-registry_components_modelview.tsx_467\"\n        data-test-id=\"descriptionEditButton\"\n        type=\"link\"\n        css={styles.editButton}\n        onClick={this.startEditingDescription}\n      >\n        <FormattedMessage\n          defaultMessage=\"Edit\"\n          description=\"Text for the edit button next to the description section title on\n             the model view page\"\n        />\n      </Button>\n    );\n  }\n\n  renderDetails = () => {\n    const { model, modelVersions, tags } = this.props;\n    const {\n      stageFilter,\n      showDescriptionEditor,\n      isDeleteModalVisible,\n      isDeleteModalConfirmLoading,\n      isTagsRequestPending,\n    } = this.state;\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    const modelName = model.name;\n    const compareDisabled = Object.keys(this.state.runsSelected).length < 2;\n    return (\n      <div css={styles.wrapper}>\n        {/* Metadata List */}\n        <Descriptions columns={3} data-testid=\"model-view-metadata\">\n          <Descriptions.Item\n            data-testid=\"model-view-metadata-item\"\n            label={this.props.intl.formatMessage({\n              defaultMessage: 'Created Time',\n              description: 'Label name for the created time under details tab on the model view page',\n            })}\n          >\n            {/* @ts-expect-error TS(2532): Object is possibly 'undefined'. */}\n            {Utils.formatTimestamp(model.creation_timestamp)}\n          </Descriptions.Item>\n          <Descriptions.Item\n            data-testid=\"model-view-metadata-item\"\n            label={this.props.intl.formatMessage({\n              defaultMessage: 'Last Modified',\n              description: 'Label name for the last modified time under details tab on the model view page',\n            })}\n          >\n            {/* @ts-expect-error TS(2532): Object is possibly 'undefined'. */}\n            {Utils.formatTimestamp(model.last_updated_timestamp)}\n          </Descriptions.Item>\n          {/* Reported during ESLint upgrade */}\n          {/* eslint-disable-next-line react/prop-types */}\n          {(model as any).user_id && (\n            <Descriptions.Item\n              data-testid=\"model-view-metadata-item\"\n              label={this.props.intl.formatMessage({\n                defaultMessage: 'Creator',\n                description: 'Lable name for the creator under details tab on the model view page',\n              })}\n            >\n              {/* eslint-disable-next-line react/prop-types */}\n              <div>{(model as any).user_id}</div>\n            </Descriptions.Item>\n          )}\n        </Descriptions>\n\n        {/* Page Sections */}\n        <CollapsibleSection\n          // @ts-expect-error TS(2322): Type '{ children: Element; css: any; title: Elemen... Remove this comment to see the full error message\n          css={(styles as any).collapsiblePanel}\n          title={\n            <span>\n              <FormattedMessage\n                defaultMessage=\"Description\"\n                description=\"Title text for the description section under details tab on the model\n                   view page\"\n              />{' '}\n              {!showDescriptionEditor ? this.renderDescriptionEditIcon() : null}\n            </span>\n          }\n          forceOpen={showDescriptionEditor}\n          // Reported during ESLint upgrade\n          // eslint-disable-next-line react/prop-types\n          defaultCollapsed={!(model as any).description}\n          data-test-id=\"model-description-section\"\n        >\n          <EditableNote\n            defaultMarkdown={(model as any).description}\n            onSubmit={this.handleSubmitEditDescription}\n            onCancel={this.handleCancelEditDescription}\n            showEditor={showDescriptionEditor}\n          />\n        </CollapsibleSection>\n        <div data-test-id=\"tags-section\">\n          <CollapsibleSection\n            title={\n              <FormattedMessage\n                defaultMessage=\"Tags\"\n                description=\"Title text for the tags section under details tab on the model view\n                   page\"\n              />\n            }\n            defaultCollapsed={Utils.getVisibleTagValues(tags).length === 0}\n            data-test-id=\"model-tags-section\"\n          >\n            <EditableTagsTableView\n              // @ts-expect-error TS(2322): Type '{ innerRef: RefObject<unknown>; handleAddTag... Remove this comment to see the full error message\n              innerRef={this.formRef}\n              handleAddTag={this.handleAddTag}\n              handleDeleteTag={this.handleDeleteTag}\n              handleSaveEdit={this.handleSaveEdit}\n              tags={tags}\n              isRequestPending={isTagsRequestPending}\n            />\n          </CollapsibleSection>\n        </div>\n        <CollapsibleSection\n          title={\n            <>\n              <div css={styles.versionsTabButtons}>\n                <span>\n                  <FormattedMessage\n                    defaultMessage=\"Versions\"\n                    description=\"Title text for the versions section under details tab on the\n                       model view page\"\n                  />\n                </span>\n                {!this.props.usingNextModelsUI && (\n                  <SegmentedControlGroup\n                    name=\"stage-filter\"\n                    value={this.state.stageFilter}\n                    onChange={(e) => this.handleStageFilterChange(e)}\n                  >\n                    <SegmentedControlButton value={StageFilters.ALL}>\n                      <FormattedMessage\n                        defaultMessage=\"All\"\n                        description=\"Tab text to view all versions under details tab on the model view page\"\n                      />\n                    </SegmentedControlButton>\n                    <SegmentedControlButton value={StageFilters.ACTIVE}>\n                      <FormattedMessage\n                        defaultMessage=\"Active\"\n                        description=\"Tab text to view active versions under details tab\n                                on the model view page\"\n                      />{' '}\n                      {this.getActiveVersionsCount()}\n                    </SegmentedControlButton>\n                  </SegmentedControlGroup>\n                )}\n                <Button\n                  componentId=\"codegen_mlflow_app_src_model-registry_components_modelview.tsx_619\"\n                  data-test-id=\"compareButton\"\n                  disabled={compareDisabled}\n                  onClick={this.onCompare}\n                >\n                  <FormattedMessage\n                    defaultMessage=\"Compare\"\n                    description=\"Text for compare button to compare versions under details tab\n                       on the model view page\"\n                  />\n                </Button>\n              </div>\n            </>\n          }\n          data-test-id=\"model-versions-section\"\n        >\n          {shouldShowModelsNextUI() && (\n            <div\n              css={{\n                marginBottom: 8,\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <ModelsNextUIToggleSwitch />\n            </div>\n          )}\n          <ModelVersionTable\n            activeStageOnly={stageFilter === StageFilters.ACTIVE && !this.props.usingNextModelsUI}\n            modelName={modelName}\n            modelVersions={modelVersions}\n            modelEntity={model}\n            onChange={this.onChange}\n            onMetadataUpdated={this.props.onMetadataUpdated}\n            usingNextModelsUI={this.props.usingNextModelsUI}\n            aliases={model?.aliases}\n          />\n        </CollapsibleSection>\n\n        {/* Delete Model Dialog */}\n        <DangerModal\n          data-testid=\"mlflow-input-modal\"\n          title={this.props.intl.formatMessage({\n            defaultMessage: 'Delete Model',\n            description: 'Title text for delete model modal on model view page',\n          })}\n          visible={isDeleteModalVisible}\n          confirmLoading={isDeleteModalConfirmLoading}\n          onOk={this.handleDeleteConfirm}\n          okText={this.props.intl.formatMessage({\n            defaultMessage: 'Delete',\n            description: 'OK text for delete model modal on model view page',\n          })}\n          cancelText={this.props.intl.formatMessage({\n            defaultMessage: 'Cancel',\n            description: 'Cancel text for delete model modal on model view page',\n          })}\n          onCancel={this.hideDeleteModal}\n        >\n          <span>\n            <FormattedMessage\n              defaultMessage=\"Are you sure you want to delete {modelName}? This cannot be undone.\"\n              description=\"Confirmation message for delete model modal on model view page\"\n              values={{ modelName: modelName }}\n            />\n          </span>\n        </DangerModal>\n      </div>\n    );\n  };\n\n  renderMainPanel() {\n    return this.renderDetails();\n  }\n\n  render() {\n    const { model } = this.props;\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    const modelName = model.name;\n\n    const breadcrumbs = [\n      <Link to={ModelRegistryRoutes.modelListPageRoute}>\n        <FormattedMessage\n          defaultMessage=\"Registered Models\"\n          description=\"Text for link back to model page under the header on the model view page\"\n        />\n      </Link>,\n    ];\n    return (\n      <div>\n        <PageHeader title={modelName} breadcrumbs={breadcrumbs}>\n          <OverflowMenu menu={this.getOverflowMenuItems()} />\n        </PageHeader>\n        {this.renderMainPanel()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  const modelName = ownProps.model.name;\n  const tags = getRegisteredModelTags(modelName, state);\n  return { tags };\n};\nconst mapDispatchToProps = { setRegisteredModelTagApi, deleteRegisteredModelTagApi };\n\nconst styles = {\n  emailNotificationPreferenceDropdown: (theme: any) => ({\n    width: 300,\n    marginBottom: theme.spacing.md,\n  }),\n  emailNotificationPreferenceTip: (theme: any) => ({\n    paddingLeft: theme.spacing.sm,\n    paddingRight: theme.spacing.sm,\n  }),\n  wrapper: (theme: any) => ({\n    '.collapsible-panel': {\n      marginBottom: theme.spacing.md,\n    },\n\n    /**\n     * This seems to be a best and most stable method to catch\n     * antd's collapsible section buttons without hacks\n     * and using class names.\n     */\n    'div[role=\"button\"][aria-expanded]': {\n      height: theme.general.buttonHeight,\n    },\n  }),\n  editButton: (theme: any) => ({\n    marginLeft: theme.spacing.md,\n  }),\n  versionsTabButtons: (theme: any) => ({\n    display: 'flex',\n    gap: theme.spacing.md,\n    alignItems: 'center',\n  }),\n};\n\nexport const ModelView = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withNextModelsUIContext(injectIntl(ModelViewImpl)));\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  searchModelVersionsApi,\n  getRegisteredModelApi,\n  updateRegisteredModelApi,\n  deleteRegisteredModelApi,\n} from '../actions';\nimport { ModelView } from './ModelView';\nimport { getModelVersions } from '../reducers';\nimport { MODEL_VERSION_STATUS_POLL_INTERVAL as POLL_INTERVAL } from '../constants';\nimport { PageContainer } from '../../common/components/PageContainer';\nimport RequestStateWrapper, { triggerError } from '../../common/components/RequestStateWrapper';\nimport { Spinner } from '../../common/components/Spinner';\nimport { ErrorView } from '../../common/components/ErrorView';\nimport { ModelRegistryRoutes } from '../routes';\nimport Utils from '../../common/utils/Utils';\nimport { getUUID } from '../../common/utils/ActionUtils';\nimport { injectIntl } from 'react-intl';\nimport { ErrorWrapper } from './../../common/utils/ErrorWrapper';\nimport { withRouterNext } from '../../common/utils/withRouterNext';\nimport type { WithRouterNextProps } from '../../common/utils/withRouterNext';\nimport { withErrorBoundary } from '../../common/utils/withErrorBoundary';\nimport ErrorUtils from '../../common/utils/ErrorUtils';\nimport { ErrorCodes } from '../../common/constants';\n\ntype ModelPageImplProps = WithRouterNextProps<{ subpage: string }> & {\n  modelName: string;\n  model?: any;\n  modelVersions?: any[];\n  emailSubscriptionStatus?: string;\n  userLevelEmailSubscriptionStatus?: string;\n  searchModelVersionsApi: (...args: any[]) => any;\n  getRegisteredModelApi: (...args: any[]) => any;\n  updateRegisteredModelApi: (...args: any[]) => any;\n  deleteRegisteredModelApi: (...args: any[]) => any;\n  setEmailSubscriptionStatusApi: (...args: any[]) => any;\n  getEmailSubscriptionStatusApi: (...args: any[]) => any;\n  getUserLevelEmailSubscriptionStatusApi: (...args: any[]) => any;\n  searchEndpointsByModelNameApi: (...args: any[]) => any;\n  intl?: any;\n};\n\nexport class ModelPageImpl extends React.Component<ModelPageImplProps> {\n  hasUnfilledRequests: any;\n  pollIntervalId: any;\n\n  initSearchModelVersionsApiRequestId = getUUID();\n  initgetRegisteredModelApiRequestId = getUUID();\n  updateRegisteredModelApiId = getUUID();\n  deleteRegisteredModelApiId = getUUID();\n\n  criticalInitialRequestIds = [this.initSearchModelVersionsApiRequestId, this.initgetRegisteredModelApiRequestId];\n\n  handleEditDescription = (description: any) => {\n    const { model } = this.props;\n    return this.props\n      .updateRegisteredModelApi(model.name, description, this.updateRegisteredModelApiId)\n      .then(this.loadData);\n  };\n\n  handleDelete = () => {\n    const { model } = this.props;\n    return this.props.deleteRegisteredModelApi(model.name, this.deleteRegisteredModelApiId);\n  };\n\n  loadData = (isInitialLoading: any) => {\n    const { modelName } = this.props;\n    this.hasUnfilledRequests = true;\n    const promiseValues = [\n      this.props.getRegisteredModelApi(\n        modelName,\n        isInitialLoading === true ? this.initgetRegisteredModelApiRequestId : null,\n      ),\n      this.props.searchModelVersionsApi(\n        { name: modelName },\n        isInitialLoading === true ? this.initSearchModelVersionsApiRequestId : null,\n      ),\n    ];\n    return Promise.all(promiseValues).then(() => {\n      this.hasUnfilledRequests = false;\n    });\n  };\n\n  pollData = () => {\n    const { modelName, navigate } = this.props;\n    if (!this.hasUnfilledRequests && Utils.isBrowserTabVisible()) {\n      // @ts-expect-error TS(2554): Expected 1 arguments, but got 0.\n      return this.loadData().catch((e) => {\n        if (e instanceof ErrorWrapper && e.getErrorCode() === 'RESOURCE_DOES_NOT_EXIST') {\n          Utils.logErrorAndNotifyUser(e);\n          this.props.deleteRegisteredModelApi(modelName, undefined, true);\n          navigate(ModelRegistryRoutes.modelListPageRoute);\n        } else {\n          console.error(e);\n        }\n        this.hasUnfilledRequests = false;\n      });\n    }\n    return Promise.resolve();\n  };\n\n  componentDidMount() {\n    this.loadData(true).catch(console.error);\n    this.hasUnfilledRequests = false;\n    this.pollIntervalId = setInterval(this.pollData, POLL_INTERVAL);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.pollIntervalId);\n  }\n\n  render() {\n    const { model, modelVersions, navigate, modelName } = this.props;\n    return (\n      <PageContainer>\n        <RequestStateWrapper\n          requestIds={this.criticalInitialRequestIds}\n          // eslint-disable-next-line no-trailing-spaces\n        >\n          {(loading: any, hasError: any, requests: any) => {\n            if (hasError) {\n              clearInterval(this.pollIntervalId);\n              if (Utils.shouldRender404(requests, [this.initgetRegisteredModelApiRequestId])) {\n                return (\n                  <ErrorView\n                    statusCode={404}\n                    subMessage={this.props.intl.formatMessage(\n                      {\n                        defaultMessage: 'Model {modelName} does not exist',\n                        description: 'Sub-message text for error message on overall model page',\n                      },\n                      {\n                        modelName: modelName,\n                      },\n                    )}\n                    fallbackHomePageReactRoute={ModelRegistryRoutes.modelListPageRoute}\n                  />\n                );\n              }\n              const permissionDeniedErrors = requests.filter((request: any) => {\n                return (\n                  this.criticalInitialRequestIds.includes(request.id) &&\n                  request.error?.getErrorCode() === ErrorCodes.PERMISSION_DENIED\n                );\n              });\n              if (permissionDeniedErrors && permissionDeniedErrors[0]) {\n                return (\n                  <ErrorView\n                    statusCode={403}\n                    subMessage={this.props.intl.formatMessage(\n                      {\n                        defaultMessage: 'Permission denied for {modelName}. Error: \"{errorMsg}\"',\n                        description: 'Permission denied error message on registered model detail page',\n                      },\n                      {\n                        modelName: modelName,\n                        errorMsg: permissionDeniedErrors[0].error?.getMessageField(),\n                      },\n                    )}\n                    fallbackHomePageReactRoute={ModelRegistryRoutes.modelListPageRoute}\n                  />\n                );\n              }\n              // TODO(Zangr) Have a more generic boundary to handle all errors, not just 404.\n              triggerError(requests);\n            } else if (loading) {\n              return <Spinner />;\n            } else if (model) {\n              // Null check to prevent NPE after delete operation\n              return (\n                <ModelView\n                  model={model}\n                  modelVersions={modelVersions}\n                  handleEditDescription={this.handleEditDescription}\n                  handleDelete={this.handleDelete}\n                  navigate={navigate}\n                  onMetadataUpdated={this.loadData}\n                />\n              );\n            }\n            return null;\n          }}\n        </RequestStateWrapper>\n      </PageContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: WithRouterNextProps<{ modelName: string }>) => {\n  const modelName = decodeURIComponent(ownProps.params.modelName);\n  const model = state.entities.modelByName[modelName];\n  const modelVersions = getModelVersions(state, modelName);\n  return {\n    modelName,\n    model,\n    modelVersions,\n  };\n};\n\nconst mapDispatchToProps = {\n  searchModelVersionsApi,\n  getRegisteredModelApi,\n  updateRegisteredModelApi,\n  deleteRegisteredModelApi,\n};\n\nconst ModelPageWithRouter = withRouterNext(\n  // @ts-expect-error TS(2769): No overload matches this call.\n  connect(mapStateToProps, mapDispatchToProps)(injectIntl(ModelPageImpl)),\n);\n\nexport const ModelPage = withErrorBoundary(ErrorUtils.mlflowServices.MODEL_REGISTRY, ModelPageWithRouter);\n\nexport default ModelPage;\n","import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, type ButtonProps, LegacyTooltip } from '@databricks/design-system';\n\ninterface CopyButtonProps extends Partial<ButtonProps> {\n  copyText: string;\n  showLabel?: React.ReactNode;\n}\n\nexport const CopyButton = ({ copyText, showLabel = true, ...buttonProps }: CopyButtonProps) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  const handleClick = () => {\n    navigator.clipboard.writeText(copyText);\n    setShowTooltip(true);\n    setTimeout(() => {\n      setShowTooltip(false);\n    }, 3000);\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  return (\n    <LegacyTooltip\n      title={\n        <FormattedMessage defaultMessage=\"Copied\" description=\"Tooltip text shown when copy operation completes\" />\n      }\n      dangerouslySetAntdProps={{\n        visible: showTooltip,\n      }}\n    >\n      <Button\n        componentId=\"codegen_mlflow_app_src_shared_building_blocks_copybutton.tsx_35\"\n        type=\"primary\"\n        onClick={handleClick}\n        onMouseLeave={handleMouseLeave}\n        css={{ 'z-index': 1 }}\n        // Define children as a explicit prop so it can be easily overrideable\n        children={\n          showLabel ? <FormattedMessage defaultMessage=\"Copy\" description=\"Button text for copy button\" /> : undefined\n        }\n        {...buttonProps}\n      />\n    </LegacyTooltip>\n  );\n};\n"],"names":["Paragraph","Typography","_ref","name","styles","_ref2","KeyValueTagFullViewModal","React","props","theme","useDesignSystemTheme","_jsx","Modal","title","tagKey","visible","isKeyValueTagFullViewModalVisible","onCancel","setIsKeyValueTagFullViewModalVisible","children","_jsxs","css","_css","backgroundColor","colors","backgroundPrimary","marginTop","spacing","sm","whiteSpace","wordBreak","tagValue","CopyButton","copyText","showLabel","icon","CopyIcon","TRUNCATE_ON_CHARS_LENGTH","getTruncatedStyles","arguments","length","undefined","overflow","textOverflow","textWrap","KeyValueTag","isClosable","onClose","tag","enableFullViewModal","charLimit","maxWidth","className","intl","useIntl","useState","shouldTruncateKey","shouldTruncateValue","key","value","fullLength","isKeyLonger","shorterLength","getKeyAndValueComplexTruncation","allowFullViewModal","fullViewModalLabel","formatMessage","id","defaultMessage","Tag","closable","LegacyTooltip","display","onClick","Text","bold","getDropdownMenu","allAvailableTags","menu","searchValue","toLowerCase","useMemo","sortedIndexOf","isValidTagKey","test","flattenOptions","data","disabled","style","color","actionTertiaryTextDefault","actionDisabledText","placement","PlusIcon","marginRight","groupOption","DropdownMenu","_ref3","TagKeySelectDropdown","control","onKeyChangeCallback","isOpen","setIsOpen","selectRef","useRef","field","fieldState","useController","rules","required","message","LegacySelect","allowClear","ref","dangerouslySetAntdProps","showSearch","dropdownRender","placeholder","defaultValue","open","onDropdownVisibleChange","filterOption","input","option","includes","onSelect","onChange","onClear","handleClear","validationState","error","map","Option","getTagsMap","tags","Map","_ref4","useEditKeyValueTagsModal","onSuccess","saveTagsHandler","valueRequired","editedEntityRef","errorMessage","setErrorMessage","initialTags","setInitialTags","finalTags","setFinalTags","showModal","setShowModal","form","useForm","defaultValues","hideModal","showEditTagsModal","useCallback","editedEntity","current","reset","saveTags","async","setIsLoading","Array","from","values","then","catch","e","_e$getUserVisibleErro","ErrorWrapper","getUserVisibleError","formValues","watch","isLoading","hasNewValues","isEqual","sortBy","isDirty","showPopoverMessage","EditTagsModal","destroyOnClose","FormattedMessage","footer","RestoreAntDDefaultClsPrefix","Button","componentId","dangerouslyUseFocusPseudoClass","UnsavedTagPopoverTrigger","onSaveTask","loading","type","onSubmit","handleSubmit","trim","newEntries","set","alignItems","gap","md","minWidth","flex","FormUI","Label","htmlFor","_tag$value","get","setValue","RHFControlledComponents","Input","htmlType","Message","rowGap","xs","flexWrap","currentFinalTags","delete","handleTagDelete","_ref6","_ref5","fullTagDisplay","truncate","shownText","Popover","Root","Trigger","asChild","Content","align","Close","marginLeft","Arrow","lazyPako","truncateToFirstLineWithMaxLength","str","maxLength","truncated","_","char","join","middleTruncateStr","maxLen","firstPartLen","Math","floor","lastPartLen","substring","_keyStr","btoaUtf8","output","i","result","_utf8_encode","chr1","charCodeAt","chr2","chr3","enc1","enc2","enc3","enc4","isNaN","charAt","atobUtf8","replace","indexOf","String","fromCharCode","_utf8_decode","utftext","n","c","string","c2","c3","getStringSHA256","crypto","subtle","digest","TextEncoder","encode","arrayBuffer","prototype","call","Uint8Array","x","toString","slice","COMPRESSED_TEXT_DEFLATE_PREFIX","textCompressDeflate","binaryData","deflate","text","Buffer","b64encoded","binaryString","byte","fromCodePoint","btoa","textDecompressDeflate","pako","compressedText","startsWith","Error","compressedTextWithoutPrefix","inflate","to","atob","m","_m$codePointAt","codePointAt","isTextCompressedDeflate","KeyValueTagsEditorCell","onAddEdit","size","_Fragment","PencilIcon","ModelVersionTableAliasesCell","aliases","columnGap","alias","ModelVersionAliasTag","COLUMN_IDS","_ref16","ModelVersionTable","modelName","modelVersions","activeStageOnly","modelEntity","onMetadataUpdated","usingNextModelsUI","aliasesByVersion","forEach","version","push","versions","filter","current_stage","ACTIVE_STAGES","allTagsKeys","allTagsList","modelVersion","flat","Set","sort","dispatch","useDispatch","existingTags","newTags","updateModelVersionTagsApi","EditAliasesModal","showEditAliasesModal","useEditRegisteredModelAliasesModal","model","rowSelection","setRowSelection","pagination","setPagination","pageSize","pageIndex","useEffect","selectedVersions","selectedVersionNumbers","tableColumns","columns","STATUS","enableSorting","header","meta","flexBasis","general","heightSm","flexGrow","cell","_ref7","row","original","status","status_message","modelVersionStatusIconTooltips","ModelVersionStatusIcons","VERSION","accessorKey","_ref8","getValue","link","chunks","Link","ModelRegistryRoutes","getModelVersionPageRoute","versionNumber","CREATION_TIMESTAMP","_ref9","Utils","formatTimestamp","USER_ID","_ref10","TAGS","_ref11","ALIASES","multiline","_ref12","mvAliases","STAGE","_ref13","StageTagComponents","DESCRIPTION","_ref14","sorting","setSorting","desc","table","useReactTable","state","getCoreRowModel","getSortedRowModel","getPaginationRowModel","getRowId","_ref15","onRowSelectionChange","onSortingChange","paginationComponent","Pagination","currentPageIndex","numTotal","page","emptyComponent","Empty","description","target","href","RegisteringModelDocUrl","image","Table","scrollable","empty","getRowModel","rows","someRowsSelected","getIsSomeRowsSelected","getIsAllRowsSelected","TableRow","isHeader","TableRowSelectCell","checked","indeterminate","getToggleAllRowsSelectedHandler","getLeafHeaders","_meta","TableHeader","sortable","column","getCanSort","sortDirection","getIsSorted","onToggleSort","getToggleSortingHandler","columnDef","flexRender","getContext","getIsSelected","getToggleSelectedHandler","getAllCells","_meta2","_meta3","_meta4","TableCell","StageFilters","ModelViewImpl","constructor","super","stageFilter","showDescriptionEditor","isDeleteModalVisible","isDeleteModalConfirmLoading","runsSelected","isTagsRequestPending","updatingEmailPreferences","formRef","handleStageFilterChange","this","setState","handleCancelEditDescription","handleSubmitEditDescription","handleEditDescription","startEditingDescription","stopPropagation","showDeleteModal","hideDeleteModal","showConfirmLoading","hideConfirmLoading","handleDeleteConfirm","navigate","handleDelete","modelListPageRoute","logErrorAndNotifyUser","handleAddTag","setRegisteredModelTagApi","resetFields","ex","console","handleSaveEdit","handleDeleteTag","deleteRegisteredModelTagApi","selectedRowKeys","selectedRows","newState","Object","assign","run_id","renderDetails","compareDisabled","keys","wrapper","Descriptions","Item","label","creation_timestamp","last_updated_timestamp","user_id","CollapsibleSection","collapsiblePanel","renderDescriptionEditIcon","forceOpen","defaultCollapsed","EditableNote","defaultMarkdown","showEditor","getVisibleTagValues","EditableTagsTableView","innerRef","isRequestPending","versionsTabButtons","SegmentedControlGroup","SegmentedControlButton","getActiveVersionsCount","onCompare","shouldShowModelsNextUI","ModelsNextUIToggleSwitch","DangerModal","confirmLoading","onOk","okText","cancelText","bind","componentDidMount","pageTitle","updatePageTitle","v","getOverflowMenuItems","itemName","getCompareModelVersionsPageRoute","editButton","renderMainPanel","render","breadcrumbs","PageHeader","OverflowMenu","mapDispatchToProps","emailNotificationPreferenceDropdown","width","marginBottom","emailNotificationPreferenceTip","paddingLeft","paddingRight","height","buttonHeight","ModelView","connect","mapStateToProps","ownProps","getRegisteredModelTags","withNextModelsUIContext","injectIntl","ModelPageImpl","hasUnfilledRequests","pollIntervalId","initSearchModelVersionsApiRequestId","getUUID","initgetRegisteredModelApiRequestId","updateRegisteredModelApiId","deleteRegisteredModelApiId","criticalInitialRequestIds","updateRegisteredModelApi","loadData","deleteRegisteredModelApi","isInitialLoading","promiseValues","getRegisteredModelApi","searchModelVersionsApi","Promise","all","pollData","isBrowserTabVisible","getErrorCode","resolve","setInterval","POLL_INTERVAL","componentWillUnmount","clearInterval","PageContainer","RequestStateWrapper","requestIds","hasError","requests","shouldRender404","ErrorView","statusCode","subMessage","fallbackHomePageReactRoute","permissionDeniedErrors","request","_request$error","ErrorCodes","PERMISSION_DENIED","_permissionDeniedErro","errorMsg","getMessageField","triggerError","Spinner","ModelPageWithRouter","withRouterNext","decodeURIComponent","params","entities","modelByName","getModelVersions","ModelPage","withErrorBoundary","ErrorUtils","mlflowServices","MODEL_REGISTRY","buttonProps","showTooltip","setShowTooltip","handleClick","navigator","clipboard","writeText","setTimeout","onMouseLeave","handleMouseLeave"],"sourceRoot":""}